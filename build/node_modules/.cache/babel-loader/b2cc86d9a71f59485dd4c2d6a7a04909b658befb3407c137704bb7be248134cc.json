{"ast":null,"code":"var _jsxFileName = \"/Users/zhangyu-cheng/Desktop/coding/portfolio/src/pages/123/components/Calculator.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport calculatorSlice from '../redux/calculatorSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Calculator.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Calculator() {\n  _s();\n  const [procedure, inputOutput] = useSelector(state => {\n    return [state.calculator.procedure, state.calculator.inputOutput];\n  });\n  const limit = useSelector(state => {\n    return state.calculator.digitLimit;\n  });\n  const dispatch = useDispatch();\n  useEffect(() => {\n    if (limit === true) {\n      document.getElementById('input-output').innerHTML = 'Digit limit met';\n      setTimeout(() => {\n        document.getElementById('input-output').innerHTML = inputOutput;\n        dispatch(calculatorSlice.actions.setLimit());\n      }, 1200);\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"123\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_s(Calculator, \"HOtVciEfc2dMT6IcFk/qG683Rqs=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n_c = Calculator;\nexport default Calculator;\nvar _c;\n$RefreshReg$(_c, \"Calculator\");","map":{"version":3,"names":["React","useEffect","calculatorSlice","useSelector","useDispatch","jsxDEV","_jsxDEV","Calculator","_s","procedure","inputOutput","state","calculator","limit","digitLimit","dispatch","document","getElementById","innerHTML","setTimeout","actions","setLimit","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/zhangyu-cheng/Desktop/coding/portfolio/src/pages/123/components/Calculator.js"],"sourcesContent":["import React, { useEffect } from 'react';\nimport calculatorSlice from '../redux/calculatorSlice';\nimport { useSelector, useDispatch } from 'react-redux';\nimport './Calculator.css'\n\nfunction Calculator() {\n  const [procedure, inputOutput] = useSelector((state) => {\n    return [state.calculator.procedure, state.calculator.inputOutput]\n  })\n  const limit = useSelector((state) => {\n    return state.calculator.digitLimit\n  })\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (limit === true) {\n      document.getElementById('input-output').innerHTML = 'Digit limit met'\n      setTimeout(() => {\n        document.getElementById('input-output').innerHTML = inputOutput\n        dispatch(calculatorSlice.actions.setLimit())\n      },1200) \n    }\n  })\n\n  return (\n    <div>\n      {/* <div className='container'>\n        <div className='output'>\n          <div className='procedure'>{procedure}</div>\n          <div id='input-output' className='input_output'>{inputOutput}</div>\n        </div>\n        <button className='AC' onClick={() => dispatch(calculatorSlice.actions.reset())}>AC</button>\n        <button onClick={() => dispatch(calculatorSlice.actions.operator('/'))}>/</button>\n        <button onClick={() => dispatch(calculatorSlice.actions.operator('*'))}>x</button>\n        <br />\n        <button onClick={() => dispatch(calculatorSlice.actions.input('7'))}>7</button>\n        <button onClick={() => dispatch(calculatorSlice.actions.input('8'))}>8</button>\n        <button onClick={() => dispatch(calculatorSlice.actions.input('9'))}>9</button>\n        <button onClick={() => dispatch(calculatorSlice.actions.operator('-'))}>-</button>\n        <br />\n        <button onClick={() => dispatch(calculatorSlice.actions.input('4'))}>4</button>\n        <button onClick={() => dispatch(calculatorSlice.actions.input('5'))}>5</button>\n        <button onClick={() => dispatch(calculatorSlice.actions.input('6'))}>6</button>\n        <button onClick={() => dispatch(calculatorSlice.actions.operator('+'))}>+</button>\n        <br />\n        <div className='flexbox'>\n          <div className='felxleft'>\n            <button onClick={() => dispatch(calculatorSlice.actions.input('1'))}>1</button>\n            <button onClick={() => dispatch(calculatorSlice.actions.input('2'))}>2</button>\n            <button onClick={() => dispatch(calculatorSlice.actions.input('3'))}>3</button>\n            <br />\n            <button className='zero' onClick={() => dispatch(calculatorSlice.actions.input('0'))}>0</button>\n            <button onClick={() => dispatch(calculatorSlice.actions.deciaml('.'))}>.</button>\n          </div>    \n          <div className='felxright'>\n            <button className='equal' onClick={() => dispatch(calculatorSlice.actions.calculate())}>=</button>\n            </div>  \n        </div>\n      </div >\n      <div className='note'>\n      note 1: the answer has been round to the nearest 2 decimal\n      </div> */}\n      123\n    </div>\n  );\n}\n\nexport default Calculator;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,eAAe,MAAM,0BAA0B;AACtD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,OAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,SAAS,EAAEC,WAAW,CAAC,GAAGP,WAAW,CAAEQ,KAAK,IAAK;IACtD,OAAO,CAACA,KAAK,CAACC,UAAU,CAACH,SAAS,EAAEE,KAAK,CAACC,UAAU,CAACF,WAAW,CAAC;EACnE,CAAC,CAAC;EACF,MAAMG,KAAK,GAAGV,WAAW,CAAEQ,KAAK,IAAK;IACnC,OAAOA,KAAK,CAACC,UAAU,CAACE,UAAU;EACpC,CAAC,CAAC;EACF,MAAMC,QAAQ,GAAGX,WAAW,CAAC,CAAC;EAC9BH,SAAS,CAAC,MAAM;IACd,IAAIY,KAAK,KAAK,IAAI,EAAE;MAClBG,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAACC,SAAS,GAAG,iBAAiB;MACrEC,UAAU,CAAC,MAAM;QACfH,QAAQ,CAACC,cAAc,CAAC,cAAc,CAAC,CAACC,SAAS,GAAGR,WAAW;QAC/DK,QAAQ,CAACb,eAAe,CAACkB,OAAO,CAACC,QAAQ,CAAC,CAAC,CAAC;MAC9C,CAAC,EAAC,IAAI,CAAC;IACT;EACF,CAAC,CAAC;EAEF,oBACEf,OAAA;IAAAgB,QAAA,EAoCY;EAEZ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;AAEV;AAAClB,EAAA,CA3DQD,UAAU;EAAA,QACgBJ,WAAW,EAG9BA,WAAW,EAGRC,WAAW;AAAA;AAAAuB,EAAA,GAPrBpB,UAAU;AA6DnB,eAAeA,UAAU;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}