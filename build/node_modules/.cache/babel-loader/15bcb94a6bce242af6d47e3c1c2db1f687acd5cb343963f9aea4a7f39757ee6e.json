{"ast":null,"code":"import*as reduxToolkit from'@reduxjs/toolkit';var createSlice=reduxToolkit.createSlice;var _calculate=function calculate(fn){// eslint-disable-next-line\nreturn new Function('return '+fn)();};// hint! use state to manage not only the numbers but also the operatin state(newNum, decimal, fin)\nvar initialState={procedure:'',inputOutput:'0',newNum:true,// for operator 清理 inputOutput\ndecimal:false,// for decimal \nfinish:false,// for equal \ndigitLimit:false};var calculatorSlice=createSlice({name:'calculator',initialState:initialState,reducers:{input:function input(state,action){if(state.inputOutput.length===22){state.digitLimit=true;}else{switch(action.payload){case'0':if(state.finish===true){state.procedure=action.payload;state.inputOutput=action.payload;state.finish=false;}else if(state.newNum===true){state.procedure+=action.payload;state.inputOutput=action.payload;state.newNum=false;}else if(state.inputOutput==='0'){state.procedure=action.payload;}else{state.procedure+=action.payload;state.inputOutput+=action.payload;}break;case'1':case'2':case'3':case'4':case'5':case'6':case'7':case'8':case'9':if(state.finish===true){state.procedure=action.payload;state.inputOutput=action.payload;state.finish=false;}else if(state.newNum===true){state.procedure+=action.payload;state.inputOutput=action.payload;state.newNum=false;}else if(state.inputOutput==='0'){state.procedure=action.payload;state.inputOutput=action.payload;}else{state.procedure+=action.payload;state.inputOutput+=action.payload;}break;default:console.log('input/deafault');break;}}},operator:function operator(state,action){state.newNum=true;// fin\nif(state.finish===true){state.procedure=state.inputOutput+action.payload;state.inputOutput=action.payload;state.finish=false;// init\n}else if(state.inputOutput==='0'){if(['*','/'].some(function(i){return i===action.payload;})){}else{state.procedure=action.payload;state.inputOutput=action.payload;}// end up with opertor\n}else if(['+','-','*','/'].some(function(i){return i===state.procedure.slice(-1);})){state.procedure=state.procedure.slice(0,-1)+action.payload;state.inputOutput=action.payload;// default\n}else{state.procedure+=action.payload;state.inputOutput=action.payload;state.decimal=false;}},deciaml:function deciaml(state,action){// decimal\nif(state.decimal===true){// fin  \n}else if(state.finish===true){state.procedure='0'+action.payload;state.inputOutput='0'+action.payload;state.finish=false;state.decimal=true;// init\n}else if(state.inputOutput==='0'){state.procedure='0'+action.payload;state.inputOutput='0'+action.payload;state.decimal=true;// end up with opertor\n}else if(['+','-','*','/'].some(function(i){return i===state.procedure.slice(-1);})){state.procedure+='0'+action.payload;state.inputOutput='0'+action.payload;state.decimal=true;state.newNum=false;// default\n}else{state.procedure+=action.payload;state.inputOutput+=action.payload;state.decimal=true;}},reset:function reset(state){state.procedure='';state.inputOutput='0';state.decimal=false;state.finish=false;},calculate:function calculate(state){if(state.procedure.search('=')===-1){// end up with opertor\nif(['+','-','*','/'].some(function(i){return i===state.procedure.slice(-1);})){state.procedure=state.procedure.slice(0,-1);}var answer=Math.round(_calculate(state.procedure)*100)/100;state.procedure+='='+_calculate(answer);state.inputOutput=_calculate(answer);state.finish=true;state.decimal=false;}},setLimit:function setLimit(state){state.digitLimit=false;}}});export default calculatorSlice;","map":{"version":3,"names":["reduxToolkit","createSlice","calculate","fn","Function","initialState","procedure","inputOutput","newNum","decimal","finish","digitLimit","calculatorSlice","name","reducers","input","state","action","length","payload","console","log","operator","some","i","slice","deciaml","reset","search","answer","Math","round","setLimit"],"sources":["/Users/zhangyu-cheng/Desktop/coding/portfolio/src/pages/Javascript Calculator/redux/calculatorSlice.js"],"sourcesContent":["import * as reduxToolkit from '@reduxjs/toolkit'\nconst {createSlice} = reduxToolkit\n\nconst calculate = (fn) => {\n  // eslint-disable-next-line\n  return new Function('return ' + fn)();\n}\n// hint! use state to manage not only the numbers but also the operatin state(newNum, decimal, fin)\nconst initialState = { \n  procedure: '',\n  inputOutput: '0',\n  newNum: true, // for operator 清理 inputOutput\n  decimal :false, // for decimal \n  finish: false, // for equal \n  digitLimit: false\n}\n\nconst calculatorSlice = createSlice({\n  name: 'calculator',\n  initialState: initialState,\n  reducers: {\n    input: (state, action) => {\n      if (state.inputOutput.length === 22) {\n        state.digitLimit = true\n      } else {\n        switch (action.payload) {\n          case '0':\n            if (state.finish === true) {\n              state.procedure = action.payload\n              state.inputOutput = action.payload\n              state.finish = false\n            } else if (state.newNum === true) {\n              state.procedure += action.payload\n              state.inputOutput = action.payload\n              state.newNum = false\n            } else if (state.inputOutput === '0') {\n              state.procedure = action.payload\n            } else {\n              state.procedure += action.payload\n              state.inputOutput += action.payload\n            }\n            break;\n          case '1':\n          case '2':\n          case '3':\n          case '4':\n          case '5':\n          case '6':\n          case '7':\n          case '8':\n          case '9':\n            if (state.finish === true) {\n              state.procedure = action.payload\n              state.inputOutput = action.payload\n              state.finish = false\n            } else if (state.newNum === true) {\n              state.procedure += action.payload\n              state.inputOutput = action.payload\n              state.newNum = false\n            } else if (state.inputOutput === '0') {\n              state.procedure = action.payload\n              state.inputOutput = action.payload\n            } else {\n  \n              state.procedure += action.payload\n              state.inputOutput += action.payload\n            }\n            break;\n          default:\n            console.log('input/deafault')\n            break;\n        }\n      } \n    },\n    operator: (state, action) => {\n      state.newNum = true\n      // fin\n      if (state.finish === true) {\n        state.procedure = state.inputOutput + action.payload\n        state.inputOutput = action.payload\n        state.finish = false\n      // init\n      } else if (state.inputOutput === '0') {\n        if (['*', '/'].some((i => i===action.payload))){\n        } else {\n          state.procedure = action.payload\n          state.inputOutput = action.payload\n        }        \n      // end up with opertor\n      } else if (['+', '-', '*', '/'].some((i) => i===state.procedure.slice(-1))) {\n        state.procedure = state.procedure.slice(0,-1) + action.payload\n        state.inputOutput = action.payload\n      // default\n      } else {\n        state.procedure += action.payload\n        state.inputOutput = action.payload\n        state.decimal = false\n      }\n    },\n    deciaml: (state, action) => {\n      // decimal\n      if (state.decimal === true ) {\n      // fin  \n      } else if (state.finish === true) {\n        state.procedure = '0' + action.payload\n        state.inputOutput = '0' + action.payload\n        state.finish = false\n        state.decimal = true\n      // init\n      } else if (state.inputOutput === '0') {\n        state.procedure = '0' + action.payload\n        state.inputOutput = '0' + action.payload\n        state.decimal = true\n      // end up with opertor\n      } else if (['+', '-', '*', '/'].some((i) => i===state.procedure.slice(-1))) {\n        state.procedure += '0' + action.payload\n        state.inputOutput = '0' + action.payload\n        state.decimal = true\n        state.newNum = false\n      // default\n      } else {\n        state.procedure += action.payload\n        state.inputOutput += action.payload\n        state.decimal = true\n      }\n    },\n    reset: (state) => {\n      state.procedure = ''\n      state.inputOutput =  '0'\n      state.decimal = false\n      state.finish = false\n    },\n    calculate: (state) => {\n      if (state.procedure.search('=') === -1) {\n        // end up with opertor\n        if (['+', '-', '*', '/'].some((i) => i===state.procedure.slice(-1))){\n          state.procedure = state.procedure.slice(0,-1)\n        } \n        const answer = Math.round(calculate(state.procedure)*100)/100\n        state.procedure += '=' + calculate(answer)\n        state.inputOutput = calculate(answer)\n        state.finish = true\n        state.decimal = false\n      }\n    },\n    setLimit: (state) => {\n      state.digitLimit = false\n    }\n  }\n})\n\nexport default calculatorSlice\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}